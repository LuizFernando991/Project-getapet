{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programa\\xE7\\xE3o\\\\Node.js\\\\Projeto-GetAPet\\\\frontend\\\\src\\\\pages\\\\Mypets\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport { useGetUserPets } from \"../../hooks/useGetUserPets\";\nimport { usePet } from '../../hooks/usePet';\nimport { PetCardMypets } from \"../../components/PetCardMypets\";\nimport * as Styled from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Mypets = () => {\n  _s();\n\n  const isMounted = useRef(true);\n  const {\n    removePet\n  } = usePet();\n  const [pets, setPets] = useState([]);\n  const [getUserPets] = useGetUserPets();\n\n  const handleOnDeleteClick = petId => {\n    removePet(petId);\n  };\n\n  useEffect(() => {\n    getUserPets().then(r => {\n      if (isMounted.current) {\n        setPets(r.pets);\n      }\n    });\n    return () => {\n      isMounted.current = false;\n    };\n  }, [getUserPets]);\n  return /*#__PURE__*/_jsxDEV(Styled.MyPets, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meus Pets:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Styled.MyPetsContainer, {\n      children: pets.length > 0 ? pets.map(pet => /*#__PURE__*/_jsxDEV(PetCardMypets, {\n        onClick: handleOnDeleteClick,\n        pet: pet\n      }, pet._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 37\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"'Nenhum pet'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Mypets, \"33sOMZ7D2EX9wZePXWhw/bB2W9Q=\", false, function () {\n  return [usePet, useGetUserPets];\n});\n\n_c = Mypets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mypets\");","map":{"version":3,"sources":["E:/ProgramaÃ§Ã£o/Node.js/Projeto-GetAPet/frontend/src/pages/Mypets/index.jsx"],"names":["useEffect","useState","useRef","useCallback","useGetUserPets","usePet","PetCardMypets","Styled","Mypets","isMounted","removePet","pets","setPets","getUserPets","handleOnDeleteClick","petId","then","r","current","length","map","pet","_id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,WAAtC,QAAyD,OAAzD;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,aAAT,QAA8B,gCAA9B;AAEA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;;AAEA,OAAO,MAAMC,MAAM,GAAE,MAAI;AAAA;;AAErB,QAAMC,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAgBL,MAAM,EAA5B;AACA,QAAM,CAAEM,IAAF,EAAQC,OAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAAEY,WAAF,IAAkBT,cAAc,EAAtC;;AAEA,QAAMU,mBAAmB,GAAIC,KAAD,IAAS;AACjCL,IAAAA,SAAS,CAACK,KAAD,CAAT;AACH,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAI;AACVa,IAAAA,WAAW,GAAGG,IAAd,CAAmBC,CAAC,IAAI;AACpB,UAAGR,SAAS,CAACS,OAAb,EAAqB;AACjBN,QAAAA,OAAO,CAACK,CAAC,CAACN,IAAH,CAAP;AACH;AACJ,KAJD;AAMA,WAAO,MAAK;AAACF,MAAAA,SAAS,CAACS,OAAV,GAAoB,KAApB;AAA0B,KAAvC;AACH,GARQ,EAQN,CAACL,WAAD,CARM,CAAT;AAYA,sBACI,QAAC,MAAD,CAAQ,MAAR;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD,CAAQ,eAAR;AAAA,gBAEMF,IAAI,CAACQ,MAAL,GAAc,CAAd,GACER,IAAI,CAACS,GAAL,CAASC,GAAG,iBAAI,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEP,mBAAxB;AAA2D,QAAA,GAAG,EAAEO;AAAhE,SAAkDA,GAAG,CAACC,GAAtD;AAAA;AAAA;AAAA;AAAA,cAAhB,CADF,gBAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAvCM;;GAAMd,M;UAGaH,M,EAGED,c;;;KANfI,M","sourcesContent":["import { useEffect, useState, useRef, useCallback } from \"react\"\r\nimport { useGetUserPets } from \"../../hooks/useGetUserPets\"\r\nimport { usePet } from '../../hooks/usePet'\r\nimport { PetCardMypets } from \"../../components/PetCardMypets\"\r\n\r\nimport * as Styled from './styles'\r\n\r\nexport const Mypets =()=>{\r\n\r\n    const isMounted = useRef(true)\r\n    const { removePet } = usePet()\r\n    const [ pets, setPets ] = useState([])\r\n\r\n    const [ getUserPets ] = useGetUserPets()\r\n\r\n    const handleOnDeleteClick = (petId)=>{\r\n        removePet(petId)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getUserPets().then(r => {\r\n            if(isMounted.current){\r\n                setPets(r.pets)\r\n            }\r\n        })\r\n        \r\n        return ()=> {isMounted.current = false}\r\n    }, [getUserPets])\r\n\r\n\r\n    \r\n    return(\r\n        <Styled.MyPets>\r\n            <h1>Meus Pets:</h1>\r\n            <Styled.MyPetsContainer>\r\n                \r\n                { pets.length > 0 ? (\r\n                    pets.map(pet => <PetCardMypets onClick={handleOnDeleteClick} key={pet._id} pet={pet}/>)\r\n                ) \r\n                :\r\n                <p>'Nenhum pet'</p>\r\n                }\r\n                \r\n            </Styled.MyPetsContainer>\r\n        </Styled.MyPets>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}