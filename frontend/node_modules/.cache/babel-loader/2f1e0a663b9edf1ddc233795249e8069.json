{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useNavigate } from 'react-router-dom';\nimport api from \"../helpers/api\";\nimport { useFlashMessage } from '../hooks/useFlashMessage';\nexport const usePet = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [setFlashMessage] = useFlashMessage();\n\n  const createPet = async pet => {\n    let msgType = 'sucess';\n    let formData = new FormData();\n    await Object.keys(pet).forEach(key => {\n      if (key === 'images') {\n        for (let i = 0; i < pet[key].length; i++) {\n          formData.append('images', pet[key][i]);\n        }\n      } else {\n        formData.append(key, pet[key]);\n      }\n    });\n    const data = await api.post(`/pets/create`, formData, {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(localStorage.getItem('token'))}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      return response.data;\n    }).catch(err => {\n      msgType = 'error';\n      return err.response.data;\n    });\n    setFlashMessage(data.message, msgType);\n    navigate('mypets');\n  };\n\n  return [createPet];\n};\n\n_s(usePet, \"zv2r1KhrVZeHen2b+lJ+/P/X7+c=\", false, function () {\n  return [useNavigate, useFlashMessage];\n});","map":{"version":3,"sources":["E:/Programação/Node.js/Projeto-GetAPet/frontend/src/hooks/usePet.js"],"names":["useNavigate","api","useFlashMessage","usePet","navigate","setFlashMessage","createPet","pet","msgType","formData","FormData","Object","keys","forEach","key","i","length","append","data","post","headers","Authorization","JSON","parse","localStorage","getItem","then","response","catch","err","message"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAI;AAAA;;AAEtB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAM,CAAEK,eAAF,IAAsBH,eAAe,EAA3C;;AAEA,QAAMI,SAAS,GAAG,MAAOC,GAAP,IAAa;AAC3B,QAAIC,OAAO,GAAG,QAAd;AAEA,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEA,UAAMC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,OAAjB,CAA0BC,GAAD,IAAQ;AACnC,UAAGA,GAAG,KAAK,QAAX,EAAoB;AAChB,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,GAAG,CAACO,GAAD,CAAH,CAASE,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpCN,UAAAA,QAAQ,CAACQ,MAAT,CAAgB,QAAhB,EAA0BV,GAAG,CAACO,GAAD,CAAH,CAASC,CAAT,CAA1B;AACH;AAEJ,OALD,MAKK;AACDN,QAAAA,QAAQ,CAACQ,MAAT,CAAgBH,GAAhB,EAAqBP,GAAG,CAACO,GAAD,CAAxB;AACH;AACJ,KATK,CAAN;AAWA,UAAMI,IAAI,GAAG,MAAMjB,GAAG,CACrBkB,IADkB,CACZ,cADY,EACGV,QADH,EACa;AAC5BW,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAASC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAA0C,EAD9D;AAEL,wBAAgB;AAFX;AADmB,KADb,EAOlBC,IAPkB,CAOZC,QAAD,IAAc;AAEhB,aAAOA,QAAQ,CAACT,IAAhB;AACH,KAVkB,EAWlBU,KAXkB,CAWXC,GAAD,IAAS;AAEZrB,MAAAA,OAAO,GAAG,OAAV;AACA,aAAOqB,GAAG,CAACF,QAAJ,CAAaT,IAApB;AACH,KAfkB,CAAnB;AAiBAb,IAAAA,eAAe,CAACa,IAAI,CAACY,OAAN,EAAetB,OAAf,CAAf;AACAJ,IAAAA,QAAQ,CAAC,QAAD,CAAR;AAEH,GApCD;;AAuCA,SAAO,CAAEE,SAAF,CAAP;AACH,CA9CM;;GAAMH,M;UAEQH,W,EAEWE,e","sourcesContent":["import { useNavigate } from 'react-router-dom'\r\nimport api from \"../helpers/api\"\r\nimport { useFlashMessage } from '../hooks/useFlashMessage'\r\n\r\nexport const usePet = ()=>{\r\n    \r\n    const navigate = useNavigate()\r\n\r\n    const [ setFlashMessage ] = useFlashMessage()\r\n\r\n    const createPet = async (pet)=>{\r\n        let msgType = 'sucess'\r\n\r\n        let formData = new FormData()\r\n\r\n        await Object.keys(pet).forEach((key) =>{\r\n            if(key === 'images'){\r\n                for(let i = 0; i < pet[key].length; i++){\r\n                    formData.append('images', pet[key][i])\r\n                }\r\n\r\n            }else{\r\n                formData.append(key, pet[key])\r\n            }\r\n        })\r\n\r\n        const data = await api\r\n        .post(`/pets/create`, formData, {\r\n            headers: {\r\n                Authorization: `Bearer ${JSON.parse(localStorage.getItem('token'))}`,\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n        .then((response) => {\r\n            \r\n            return response.data\r\n        })\r\n        .catch((err) => {\r\n            \r\n            msgType = 'error'\r\n            return err.response.data\r\n        })\r\n\r\n        setFlashMessage(data.message, msgType)\r\n        navigate('mypets')\r\n\r\n    }\r\n\r\n\r\n    return [ createPet ]\r\n}"]},"metadata":{},"sourceType":"module"}