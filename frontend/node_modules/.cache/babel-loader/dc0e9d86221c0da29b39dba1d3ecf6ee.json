{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programa\\xE7\\xE3o\\\\Node.js\\\\Projeto-GetAPet\\\\frontend\\\\src\\\\components\\\\Menu\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGetUser } from '../../hooks/useGetUser';\nimport { UserContext } from '../../contexts/UserContext';\nimport UserImage from '../../images/userProfileDefaut.jpg';\nimport * as Styled from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Menu = () => {\n  _s();\n\n  const isMounted = useRef(true);\n  const [user, setUser] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n  const [getCheckUser] = useGetUser();\n  const {\n    logout,\n    authenticated\n  } = useContext(UserContext);\n\n  const handleOnLogout = e => {\n    e.preventDefault();\n    logout();\n  };\n\n  useEffect(() => {\n    getCheckUser().then(r => {\n      if (isMounted.current) {\n        setUser(r);\n      }\n    });\n    return () => {\n      isMounted.current = false;\n    };\n  }, [getCheckUser, authenticated]);\n  return /*#__PURE__*/_jsxDEV(Styled.Menu, {\n    onClick: () => {\n      setIsOpen(!isOpen);\n    },\n    children: [user.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.REACT_APP_API}/images/users/${user.image}`,\n      alt: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: UserImage,\n      alt: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Styled.DropDownMenu, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/Profile\",\n            children: \"Perfil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/mypets\",\n            children: \"Meus pets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: handleOnLogout,\n            children: \"Sair\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Menu, \"ekaq1RL0qMu8uuoHYdPa6ncWgu4=\", false, function () {\n  return [useGetUser];\n});\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["E:/Programação/Node.js/Projeto-GetAPet/frontend/src/components/Menu/index.jsx"],"names":["useEffect","useState","useContext","useRef","Link","useGetUser","UserContext","UserImage","Styled","Menu","isMounted","user","setUser","isOpen","setIsOpen","getCheckUser","logout","authenticated","handleOnLogout","e","preventDefault","then","r","current","image","process","env","REACT_APP_API","name"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CC,MAA1C,QAAwD,OAAxD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AAGA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;;AAGA,OAAO,MAAMC,IAAI,GAAE,MAAI;AAAA;;AAEnB,QAAMC,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;AAEA,QAAM,CAAEQ,IAAF,EAAQC,OAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEY,MAAF,EAAUC,SAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAEc,YAAF,IAAmBV,UAAU,EAAnC;AAEA,QAAM;AAAEW,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA4Bf,UAAU,CAACI,WAAD,CAA5C;;AAEA,QAAMY,cAAc,GAAGC,CAAD,IAAK;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,MAAM;AACT,GAHD;;AAKAhB,EAAAA,SAAS,CAAC,MAAI;AACVe,IAAAA,YAAY,GAAGM,IAAf,CAAoBC,CAAC,IAAI;AACrB,UAAGZ,SAAS,CAACa,OAAb,EAAqB;AACjBX,QAAAA,OAAO,CAACU,CAAD,CAAP;AACH;AACJ,KAJD;AAMA,WAAO,MAAK;AAACZ,MAAAA,SAAS,CAACa,OAAV,GAAoB,KAApB;AAA0B,KAAvC;AACH,GARQ,EAQN,CAACR,YAAD,EAAeE,aAAf,CARM,CAAT;AAWA,sBACI,QAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,OAAO,EAAE,MAAI;AAACH,MAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AAAmB,KAA9C;AAAA,eACKF,IAAI,CAACa,KAAL,gBACG;AAAK,MAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,aAAc,iBAAgBhB,IAAI,CAACa,KAAM,EAAlE;AAAqE,MAAA,GAAG,EAAEb,IAAI,CAACiB;AAA/E;AAAA;AAAA;AAAA;AAAA,YADH,gBAGG;AAAK,MAAA,GAAG,EAAErB,SAAV;AAAqB,MAAA,GAAG,EAAEI,IAAI,CAACiB;AAA/B;AAAA;AAAA;AAAA;AAAA,YAJR,EAMKf,MAAM,iBACP,QAAC,MAAD,CAAQ,YAAR;AAAA,6BACI;AAAA,gCACI;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAa,YAAA,OAAO,EAAEK,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAnDM;;GAAMT,I;UAMgBJ,U;;;KANhBI,I","sourcesContent":["import { useEffect, useState, useContext, useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useGetUser } from '../../hooks/useGetUser'\r\nimport { UserContext } from '../../contexts/UserContext'\r\nimport UserImage from '../../images/userProfileDefaut.jpg'\r\n\r\n\r\nimport * as Styled from './styles'\r\n\r\n\r\nexport const Menu =()=>{\r\n\r\n    const isMounted = useRef(true)\r\n\r\n    const [ user, setUser ] = useState({})\r\n    const [ isOpen, setIsOpen ] = useState(false)\r\n    const [ getCheckUser ] = useGetUser()\r\n\r\n    const { logout, authenticated } = useContext(UserContext)\r\n\r\n    const handleOnLogout =(e)=>{\r\n        e.preventDefault()\r\n        logout()\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getCheckUser().then(r => {\r\n            if(isMounted.current){\r\n                setUser(r)\r\n            }\r\n        })\r\n\r\n        return ()=> {isMounted.current = false}\r\n    }, [getCheckUser, authenticated])\r\n\r\n\r\n    return(\r\n        <Styled.Menu onClick={()=>{setIsOpen(!isOpen)}}>\r\n            {user.image ?\r\n                <img src={`${process.env.REACT_APP_API}/images/users/${user.image}`} alt={user.name} />\r\n                :\r\n                <img src={UserImage} alt={user.name} />\r\n            }\r\n            {isOpen &&\r\n            <Styled.DropDownMenu>\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/Profile'>Perfil</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/mypets'>Meus pets</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='#' onClick={handleOnLogout}>Sair</Link>\r\n                    </li>\r\n                </ul>\r\n            </Styled.DropDownMenu>\r\n            }\r\n        </Styled.Menu>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}