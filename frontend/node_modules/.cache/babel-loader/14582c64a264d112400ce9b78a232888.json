{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programa\\xE7\\xE3o\\\\Node.js\\\\Projeto-GetAPet\\\\frontend\\\\src\\\\components\\\\Message\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport * as Styled from './styles';\nimport { useState, useEffect, useRef } from 'react';\nimport { IoCloseSharp } from 'react-icons/io5';\nimport EventEmitter from '../../helpers/EventEmmiter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Message = () => {\n  _s();\n\n  const [isActived, setIsActived] = useState(false);\n  const [message, setMessage] = useState('');\n  const [type, setType] = useState('');\n  const isMounted = useRef(true);\n  useEffect(() => {\n    if (isMounted.current) {\n      EventEmitter.addListener('flash', _ref => {\n        let {\n          message,\n          type\n        } = _ref;\n        setIsActived(true);\n        setMessage(message);\n        setType(type);\n        setTimeout(() => {\n          setIsActived(false);\n        }, 1800);\n      });\n    }\n\n    return () => isMounted.current = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isActived && /*#__PURE__*/_jsxDEV(Styled.Message, {\n      isActived: isActived,\n      type: type,\n      children: [message, /*#__PURE__*/_jsxDEV(IoCloseSharp, {\n        onClick: () => setIsActived(false),\n        className: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Message, \"o0L5Tz67L+Go8EATAutpdsCLSFA=\");\n\n_c = Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["E:/Programação/Node.js/Projeto-GetAPet/frontend/src/components/Message/index.jsx"],"names":["Styled","useState","useEffect","useRef","IoCloseSharp","EventEmitter","Message","isActived","setIsActived","message","setMessage","type","setType","isMounted","current","addListener","setTimeout"],"mappings":";;;AAAA,OAAO,KAAKA,MAAZ,MAAwB,UAAxB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AAGA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAIA,OAAO,MAAMC,OAAO,GAAE,MAAI;AAAA;;AAEtB,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAEQ,OAAF,EAAWC,UAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEU,IAAF,EAAQC,OAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,SAAS,GAAGV,MAAM,CAAC,IAAD,CAAxB;AAGAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGW,SAAS,CAACC,OAAb,EAAqB;AACjBT,MAAAA,YAAY,CAACU,WAAb,CAAyB,OAAzB,EAAkC,QAAmB;AAAA,YAAlB;AAACN,UAAAA,OAAD;AAAUE,UAAAA;AAAV,SAAkB;AACjDH,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,QAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,QAAAA,UAAU,CAAC,MAAI;AACXR,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OAPD;AAQH;;AACD,WAAO,MAAKK,SAAS,CAACC,OAAV,GAAoB,KAAhC;AAEH,GAbQ,EAaN,EAbM,CAAT;AAgBA,sBACI;AAAA,cACKP,SAAS,iBACN,QAAC,MAAD,CAAQ,OAAR;AAAgB,MAAA,SAAS,EAAEA,SAA3B;AAAsC,MAAA,IAAI,EAAEI,IAA5C;AAAA,iBACKF,OADL,eAEI,QAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAKD,YAAY,CAAC,KAAD,CAAxC;AAAiD,QAAA,SAAS,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR,mBADJ;AAYH,CApCM;;GAAMF,O;;KAAAA,O","sourcesContent":["import * as Styled from './styles'\r\nimport { useState, useEffect, useRef } from 'react'\r\n\r\nimport { IoCloseSharp } from 'react-icons/io5'\r\n\r\n\r\nimport EventEmitter from '../../helpers/EventEmmiter'\r\n\r\n\r\n\r\nexport const Message =()=>{\r\n\r\n    const [ isActived, setIsActived ] = useState(false)\r\n    const [ message, setMessage ] = useState('')\r\n    const [ type, setType ] = useState('')\r\n    const isMounted = useRef(true)\r\n\r\n\r\n    useEffect(()=>{\r\n        if(isMounted.current){\r\n            EventEmitter.addListener('flash', ({message, type})=>{\r\n                setIsActived(true)\r\n                setMessage(message)\r\n                setType(type)\r\n                setTimeout(()=>{\r\n                    setIsActived(false)\r\n                }, 1800)\r\n            })\r\n        }\r\n        return ()=> isMounted.current = false\r\n        \r\n    }, [])\r\n\r\n\r\n    return(\r\n        <>\r\n            {isActived && \r\n                <Styled.Message isActived={isActived} type={type}>\r\n                    {message}\r\n                    <IoCloseSharp onClick={()=> setIsActived(false)} className='button'/>\r\n                </Styled.Message>\r\n            }\r\n        \r\n        </>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}