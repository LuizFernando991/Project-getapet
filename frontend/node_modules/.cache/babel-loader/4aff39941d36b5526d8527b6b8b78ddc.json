{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport api from '../helpers/api';\nimport { useState, useEffect } from 'react';\nimport { useFlashMessage } from './useFlashMessage';\nimport { useNavigate } from 'react-router-dom';\nexport const useAuth = () => {\n  _s();\n\n  const [setFlashMessage] = useFlashMessage();\n  const [authenticated, setAuthenticated] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      api.defaults.headers.Athorizarion = `Bearer ${JSON.parse(token)}`;\n      setAuthenticated(true);\n    }\n  }, []);\n\n  const register = async user => {\n    let msgText = 'Cadastro realizado com sucesso!';\n    let msgType = 'success';\n\n    try {\n      const data = await api.post('/users/register', user);\n      const resData = data.data;\n      await authUser(resData);\n    } catch (err) {\n      msgText = err.response.data.message;\n      msgType = 'error';\n    }\n\n    setFlashMessage(msgText, msgType);\n  };\n\n  const authUser = async data => {\n    setAuthenticated(true);\n    localStorage.setItem('token', JSON.stringify(data.token));\n    navigate('/');\n  };\n\n  const logout = () => {\n    let msgText = 'Logout realizado com sucesso';\n    let msgType = 'success';\n    setAuthenticated(false);\n    localStorage.removeItem('token');\n    api.defaults.headers.Athorizarion = undefined;\n    navigate('/');\n    setFlashMessage(msgText, msgType);\n  };\n\n  const login = async user => {\n    let msgText = 'Login realizado com sucesso';\n    let msgType = 'success';\n\n    try {\n      const data = await api.post('/users/login', user);\n      const resData = data.data;\n      await authUser(resData);\n    } catch (err) {\n      msgText = err.response.data.message;\n      msgType = 'error';\n    }\n\n    setFlashMessage(msgText, msgType);\n  };\n\n  const edit = async user => {\n    let msgType = 'sucess';\n    let formData = new FormData();\n    Object.keys(user).forEach(key => {\n      formData.append(key, user[key]);\n    });\n    console.log(formData);\n    const data = await api.patch(`/users/edit/${user._id}`, FormData, {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(localStorage.getItem('token'))}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(r => {\n      return r.data;\n    }).catch(err => {\n      msgType = 'error';\n      return err.response.data;\n    });\n    setFlashMessage(data.message, msgType);\n  };\n\n  return [register, logout, login, edit, authenticated];\n};\n\n_s(useAuth, \"dqwuYnIlOd9N3PLpetfPByxMp1Q=\", false, function () {\n  return [useFlashMessage, useNavigate];\n});","map":{"version":3,"sources":["E:/Programação/Node.js/Projeto-GetAPet/frontend/src/hooks/useAuth.js"],"names":["api","useState","useEffect","useFlashMessage","useNavigate","useAuth","setFlashMessage","authenticated","setAuthenticated","navigate","token","localStorage","getItem","defaults","headers","Athorizarion","JSON","parse","register","user","msgText","msgType","data","post","resData","authUser","err","response","message","setItem","stringify","logout","removeItem","undefined","login","edit","formData","FormData","Object","keys","forEach","key","append","console","log","patch","_id","Authorization","then","r","catch"],"mappings":"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","sourcesContent":["import api from '../helpers/api'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { useFlashMessage } from './useFlashMessage'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\nexport const useAuth= ()=>{\r\n\r\n    const [ setFlashMessage ] = useFlashMessage()\r\n\r\n    const [ authenticated  , setAuthenticated ] = useState(false)\r\n\r\n    const navigate = useNavigate()\r\n\r\n\r\n    useEffect(()=>{\r\n        const token = localStorage.getItem('token')\r\n\r\n        if(token){\r\n            api.defaults.headers.Athorizarion = `Bearer ${JSON.parse(token)}`\r\n            setAuthenticated(true)\r\n        }\r\n    }, [])    \r\n\r\n\r\n\r\n    const register= async (user)=>{\r\n\r\n        let msgText = 'Cadastro realizado com sucesso!'\r\n        let msgType = 'success'\r\n\r\n        try{\r\n            const data = await api.post('/users/register', user)\r\n\r\n\r\n            const resData = data.data\r\n\r\n            await authUser(resData)\r\n\r\n\r\n\r\n        }catch(err){\r\n            msgText = err.response.data.message\r\n            msgType = 'error'\r\n        }\r\n\r\n\r\n        setFlashMessage(msgText, msgType)\r\n    }\r\n\r\n    const authUser = async(data)=>{\r\n\r\n\r\n        setAuthenticated(true)\r\n\r\n        localStorage.setItem('token', JSON.stringify(data.token))\r\n\r\n        navigate('/')\r\n\r\n\r\n    }\r\n\r\n\r\n    const logout =()=>{\r\n\r\n        let msgText = 'Logout realizado com sucesso'\r\n        let msgType = 'success'\r\n\r\n        setAuthenticated(false)\r\n        localStorage.removeItem('token')\r\n        api.defaults.headers.Athorizarion = undefined\r\n\r\n        navigate('/')\r\n\r\n        setFlashMessage(msgText, msgType)\r\n\r\n    }\r\n\r\n    const login = async(user)=>{\r\n\r\n        let msgText = 'Login realizado com sucesso'\r\n        let msgType = 'success'\r\n\r\n        try{\r\n\r\n            const data = await api.post('/users/login', user)\r\n            const resData = data.data\r\n\r\n            await authUser(resData)\r\n\r\n        }catch(err){\r\n            msgText = err.response.data.message\r\n            msgType = 'error'\r\n        }\r\n\r\n        setFlashMessage(msgText, msgType)\r\n\r\n\r\n    }\r\n\r\n    const edit = async(user)=>{\r\n\r\n        let msgType = 'sucess'\r\n\r\n        let formData = new FormData()\r\n\r\n        Object.keys(user).forEach((key)=>{\r\n            formData.append(key, user[key])\r\n        })\r\n\r\n        console.log(formData)\r\n       \r\n        const data = await api.patch(`/users/edit/${user._id}`, FormData, {\r\n            headers : {\r\n                Authorization : `Bearer ${JSON.parse(localStorage.getItem('token'))}`,\r\n                'Content-Type' : 'multipart/form-data'\r\n            }\r\n        }).then(r =>{\r\n            return r.data\r\n        }).catch(err =>{\r\n            msgType = 'error'\r\n            return err.response.data\r\n        })\r\n\r\n        setFlashMessage(data.message, msgType)\r\n\r\n    }\r\n\r\n    return [register, logout, login, edit, authenticated]\r\n\r\n}"]},"metadata":{},"sourceType":"module"}