{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport api from \"../helpers/api\";\nimport { useFlashMessage } from '../hooks/useFlashMessage';\nexport const usePet = () => {\n  _s();\n\n  const [setFlashMessage] = useFlashMessage();\n\n  const createPet = async pet => {\n    let msgType = 'sucess';\n    let formData = new FormData();\n    await Object.keys(pet).forEach(key => {\n      if (key === 'images') {} else {\n        formData.append(key, pet[key]);\n      }\n    });\n    const data = await api.post(`/users/edit/${pet._id}`, formData, {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(localStorage.getItem('token'))}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      return response.data;\n    }).catch(err => {\n      msgType = 'error';\n      return err.response.data;\n    });\n    setFlashMessage(data.message, msgType);\n  };\n\n  return [createPet];\n};\n\n_s(usePet, \"0T7fEJCKVhIKiHVnTYpHVUOlRIE=\", false, function () {\n  return [useFlashMessage];\n});","map":{"version":3,"sources":["E:/Programação/Node.js/Projeto-GetAPet/frontend/src/hooks/usePet.js"],"names":["api","useFlashMessage","usePet","setFlashMessage","createPet","pet","msgType","formData","FormData","Object","keys","forEach","key","append","data","post","_id","headers","Authorization","JSON","parse","localStorage","getItem","then","response","catch","err","message"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,gBAAhB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAI;AAAA;;AAEtB,QAAM,CAAEC,eAAF,IAAsBF,eAAe,EAA3C;;AAEA,QAAMG,SAAS,GAAG,MAAOC,GAAP,IAAa;AAC3B,QAAIC,OAAO,GAAG,QAAd;AAEA,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEA,UAAMC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,OAAjB,CAA0BC,GAAD,IAAQ;AACnC,UAAGA,GAAG,KAAK,QAAX,EAAoB,CAEnB,CAFD,MAEK;AACDL,QAAAA,QAAQ,CAACM,MAAT,CAAgBD,GAAhB,EAAqBP,GAAG,CAACO,GAAD,CAAxB;AACH;AACJ,KANK,CAAN;AAQA,UAAME,IAAI,GAAG,MAAMd,GAAG,CACrBe,IADkB,CACZ,eAAcV,GAAG,CAACW,GAAI,EADV,EACaT,QADb,EACuB;AACtCU,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAASC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAA0C,EAD9D;AAEL,wBAAgB;AAFX;AAD6B,KADvB,EAOlBC,IAPkB,CAOZC,QAAD,IAAc;AAEhB,aAAOA,QAAQ,CAACV,IAAhB;AACH,KAVkB,EAWlBW,KAXkB,CAWXC,GAAD,IAAS;AAEZpB,MAAAA,OAAO,GAAG,OAAV;AACA,aAAOoB,GAAG,CAACF,QAAJ,CAAaV,IAApB;AACH,KAfkB,CAAnB;AAiBAX,IAAAA,eAAe,CAACW,IAAI,CAACa,OAAN,EAAerB,OAAf,CAAf;AAEH,GAhCD;;AAmCA,SAAO,CAAEF,SAAF,CAAP;AACH,CAxCM;;GAAMF,M;UAEmBD,e","sourcesContent":["import api from \"../helpers/api\"\r\nimport { useFlashMessage } from '../hooks/useFlashMessage'\r\n\r\nexport const usePet = ()=>{\r\n\r\n    const [ setFlashMessage ] = useFlashMessage()\r\n\r\n    const createPet = async (pet)=>{\r\n        let msgType = 'sucess'\r\n\r\n        let formData = new FormData()\r\n\r\n        await Object.keys(pet).forEach((key) =>{\r\n            if(key === 'images'){\r\n\r\n            }else{\r\n                formData.append(key, pet[key])\r\n            }\r\n        })\r\n\r\n        const data = await api\r\n        .post(`/users/edit/${pet._id}`, formData, {\r\n            headers: {\r\n                Authorization: `Bearer ${JSON.parse(localStorage.getItem('token'))}`,\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n        .then((response) => {\r\n            \r\n            return response.data\r\n        })\r\n        .catch((err) => {\r\n            \r\n            msgType = 'error'\r\n            return err.response.data\r\n        })\r\n\r\n        setFlashMessage(data.message, msgType)\r\n\r\n    }\r\n\r\n\r\n    return [ createPet ]\r\n}"]},"metadata":{},"sourceType":"module"}